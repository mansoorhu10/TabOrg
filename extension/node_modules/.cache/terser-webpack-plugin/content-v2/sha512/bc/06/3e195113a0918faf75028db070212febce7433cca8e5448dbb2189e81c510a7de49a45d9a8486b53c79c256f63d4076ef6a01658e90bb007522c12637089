{"map":"{\"version\":3,\"sources\":[\"C:/Users/manso/OneDrive/Desktop/TabOrg-master/TabOrg/extension/src/app.js\",\"C:/Users/manso/OneDrive/Desktop/TabOrg-master/TabOrg/extension/src/index.js\"],\"names\":[\"AppContainer\",\"styled\",\"div\",\"_templateObject\",\"Object\",\"taggedTemplateLiteral\",\"CurrentTab\",\"props\",\"react_default\",\"a\",\"createElement\",\"name\",\"chrome\",\"storage\",\"onChanged\",\"addListener\",\"changes\",\"area\",\"console\",\"log\",\"_i\",\"_changedItems\",\"keys\",\"length\",\"sync\",\"get\",\"newMode\",\"mode\",\"App\",\"_useState\",\"useState\",\"_useState2\",\"slicedToArray\",\"currentTabs\",\"setNewTabs\",\"map\",\"item\",\"i\",\"key\",\"result\",\"currentURL\",\"tab\",\"newURLs\",\"concat\",\"toConsumableArray\",\"addTabs\",\"ReactDOM\",\"render\",\"StrictMode\",\"app\",\"document\",\"getElementById\"],\"mappings\":\"8NAMMA,OAAeC,EAAOC,IAAVC,IAAAA,EAAAC,OAAAC,EAAA,EAAAD,CAAA,CAAA,aA2ClB,SAASE,EAAWC,GAChB,OACIC,EAAAC,EAAAC,cAAA,MAAA,KACIF,EAAAC,EAAAC,cAAA,IAAA,KAAIH,EAAMI,OAvBtBC,OAAOC,QAAQC,UAAUC,YAAY,SAAUC,EAASC,GACpDC,QAAQC,IAAI,2BAA6BF,GAIzC,IAFA,IAEAG,EAAA,EAAAC,EAFmBjB,OAAOkB,KAAKN,GAE/BI,EAAAC,EAAAE,OAAAH,IACe,eADYC,EAAAD,KAGb,EACVF,QAAQC,IAAI,yBAMpBP,OAAOC,QAAQW,KAAKC,IAAI,CAAC,QAAS,SAASC,GACvCR,QAAQC,IAAI,wBAA0BO,EAAQC,QA2CnCC,IAAAA,EA9Bf,WAAe,IAAAC,EACuBC,OAAAA,EAAAA,SAAAA,CAAS,CAAC,UAAW,YAD5CC,EAAA3B,OAAA4B,EAAA,EAAA5B,CAAAyB,EAAA,GACJI,EADIF,EAAA,GACSG,EADTH,EAAA,GAQX,OACIvB,EAAAC,EAAAC,cAACV,EAAD,KACKiC,EAAYE,IAAI,SAACC,EAAMC,GAAP,OAAa7B,EAAAC,EAAAC,cAACJ,EAAD,CAC1BgC,IAAOD,EACP1B,KAAQyB,MAHhB,sBAOQxB,OAAOC,QAAQW,KAAKC,IAAI,CAAC,cAAe,SAASc,GAC7CrB,QAAQC,IAAI,kBACZD,QAAQC,IAAIoB,EAAOC,YAfnB,SAACC,GACb,IAAMC,EAAO,GAAAC,OAAAvC,OAAAwC,EAAA,EAAAxC,CAAO6B,GAAP,CAAoBQ,IACjCP,EAAWQ,GAcCG,CAAQN,EAAOC,YACL,MCtE9BM,EAAAA,EAASC,OACLvC,EAAAC,EAAAC,cAACF,EAAAC,EAAMuC,WAAP,KACIxC,EAAAC,EAAAC,cAACuC,EAAD,OAEJC,SAASC,eAAe\",\"sourcesContent\":[\"/*global chrome*/\\r\\n\\r\\nimport React, { useState } from 'react'\\r\\nimport styled from 'styled-components'\\r\\n\\r\\n// custom styling using styled-components!\\r\\nconst AppContainer = styled.div`\\r\\n  \\r\\n`\\r\\n\\r\\nvar item = \\\"\\\";\\r\\nvar getTabs = 0;\\r\\n\\r\\n/*\\r\\nasync function fetchFromStorage(key) {\\r\\n    return new Promise ((resolve, reject) => {\\r\\n        chrome.storage.sync.get([key], resolve);\\r\\n    })\\r\\n        .then(result => {\\r\\n            if (key == null) {\\r\\n                return result;\\r\\n            }\\r\\n            else {\\r\\n                return result[key];\\r\\n            }\\r\\n        });\\r\\n}\\r\\n*/\\r\\n\\r\\nchrome.storage.onChanged.addListener(function (changes, area) {\\r\\n    console.log(\\\"Change in storage area: \\\" + area);\\r\\n    \\r\\n    var changedItems = Object.keys(changes);\\r\\n  \\r\\n    for (item of changedItems) {\\r\\n      if (item === 'currentURL')\\r\\n      {\\r\\n        getTabs = 1;\\r\\n        console.log(\\\"Set getTabs = true\\\");\\r\\n      }\\r\\n    }\\r\\n\\r\\n});\\r\\n\\r\\nchrome.storage.sync.get(['mode'], function(newMode) {\\r\\n    console.log(\\\"DA mode is currently \\\" + newMode.mode);\\r\\n});\\r\\n\\r\\n\\r\\nfunction CurrentTab(props) {\\r\\n    return (\\r\\n        <div>\\r\\n            <p>{props.name}</p>\\r\\n        </div>\\r\\n    )\\r\\n\\r\\n}\\r\\n\\r\\nfunction App() {\\r\\n    const [currentTabs, setNewTabs] = useState([\\\"youtube\\\", \\\"twitter\\\"]);\\r\\n\\r\\n    const addTabs = (tab) => {\\r\\n        const newURLs = [...currentTabs, tab];\\r\\n        setNewTabs(newURLs);\\r\\n    }\\r\\n\\r\\n    return ( \\r\\n        <AppContainer>\\r\\n            {currentTabs.map((item, i) => <CurrentTab \\r\\n                key = {i}\\r\\n                name = {item}\\r\\n            />)}\\r\\n\\r\\n            if (getTabs === 1) {\\r\\n                chrome.storage.sync.get(['currentURL'], function(result) {\\r\\n                    console.log('currentURL is ');\\r\\n                    console.log(result.currentURL);\\r\\n                    addTabs(result.currentURL);\\r\\n                    getTabs = 0;\\r\\n                })\\r\\n                \\r\\n            }\\r\\n            \\r\\n\\r\\n        </AppContainer>\\r\\n    );\\r\\n}\\r\\n\\r\\nexport default App;\",\"/*global chrome*/\\r\\n\\r\\nimport React from 'react';\\r\\nimport ReactDOM from 'react-dom';\\r\\nimport './style.css';\\r\\nimport App from './app';\\r\\n\\r\\n\\r\\nReactDOM.render(\\r\\n    <React.StrictMode>\\r\\n        <App />\\r\\n    </React.StrictMode>,\\r\\n    document.getElementById(\\\"root\\\")\\r\\n)\\r\\n\\r\\n\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{13:function(e,n,t){e.exports=t(22)},18:function(e,n,t){},22:function(e,n,t){\"use strict\";t.r(n);var o,r=t(0),c=t.n(r),a=t(5),u=t.n(a),l=(t(18),t(11)),s=t(12),i=t(6),g=t(7).a.div(o||(o=Object(i.a)([\"\\n  \\n\"])));function m(e){return c.a.createElement(\"div\",null,c.a.createElement(\"p\",null,e.name))}chrome.storage.onChanged.addListener(function(e,n){console.log(\"Change in storage area: \"+n);for(var t=0,o=Object.keys(e);t<o.length;t++)\"currentURL\"===o[t]&&(1,console.log(\"Set getTabs = true\"))}),chrome.storage.sync.get([\"mode\"],function(e){console.log(\"DA mode is currently \"+e.mode)});var d=function(){var e=Object(r.useState)([\"youtube\",\"twitter\"]),n=Object(s.a)(e,2),t=n[0],o=n[1];return c.a.createElement(g,null,t.map(function(e,n){return c.a.createElement(m,{key:n,name:e})}),\"if (getTabs === 1) \",chrome.storage.sync.get([\"currentURL\"],function(e){console.log(\"currentURL is \"),console.log(e.currentURL),function(e){var n=[].concat(Object(l.a)(t),[e]);o(n)}(e.currentURL),0}))};u.a.render(c.a.createElement(c.a.StrictMode,null,c.a.createElement(d,null)),document.getElementById(\"root\"))}},[[13,2,1]]]);","extractedComments":[]}