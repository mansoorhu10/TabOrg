{"map":"{\"version\":3,\"sources\":[\"C:/Users/manso/OneDrive/Desktop/TabOrg-master/TabOrg/extension/src/app.js\",\"C:/Users/manso/OneDrive/Desktop/TabOrg-master/TabOrg/extension/src/index.js\"],\"names\":[\"AppContainer\",\"styled\",\"div\",\"_templateObject\",\"Object\",\"taggedTemplateLiteral\",\"getTabs\",\"CurrentTab\",\"props\",\"react_default\",\"a\",\"createElement\",\"name\",\"UpdateTabs\",\"update\",\"chrome\",\"storage\",\"sync\",\"get\",\"result\",\"console\",\"log\",\"currentURL\",\"addTabs\",\"newMode\",\"mode\",\"App\",\"_useState\",\"useState\",\"_useState2\",\"slicedToArray\",\"currentTabs\",\"addCallback\",\"map\",\"item\",\"i\",\"key\",\"onClick\",\"ReactDOM\",\"render\",\"StrictMode\",\"app\",\"document\",\"getElementById\"],\"mappings\":\"4NAMMA,OAAeC,EAAOC,IAAVC,IAAAA,EAAAC,OAAAC,EAAA,EAAAD,CAAA,CAAA,aAKdE,GAAU,EAyBd,SAASC,EAAWC,GAChB,OACIC,EAAAC,EAAAC,cAAA,MAAA,KACIF,EAAAC,EAAAC,cAAA,IAAA,KAAIH,EAAMI,OAKtB,SAASC,EAAWL,GACDA,EAAMM,QAEjBC,OAAOC,QAAQC,KAAKC,IAAI,CAAC,cAAe,SAASC,GAC7CC,QAAQC,IAAI,kBACZD,QAAQC,IAAIF,EAAOG,YACnBC,QAAQJ,EAAOG,YACfhB,GAAU,IApBtBS,OAAOC,QAAQC,KAAKC,IAAI,CAAC,QAAS,SAASM,GACvCJ,QAAQC,IAAI,wBAA0BG,EAAQC,QAwDnCC,IAAAA,EAhCf,WAAe,IAAAC,EACuBC,OAAAA,EAAAA,SAAAA,CAAS,CAAC,UAAW,YAD5CC,EAAAzB,OAAA0B,EAAA,EAAA1B,CAAAuB,EAAA,GACJI,EADIF,EAAA,GASX,OATWA,EAAA,GAUPpB,EAAAC,EAAAC,cAACX,EAAD,CAAcgC,YAAanB,GACtBkB,EAAYE,IAAI,SAACC,EAAMC,GAAP,OAAa1B,EAAAC,EAAAC,cAACJ,EAAD,CAC1B6B,IAAOD,EACPvB,KAAQsB,EACRpB,OAAUR,MAGdG,EAAAC,EAAAC,cAAA,SAAA,CAAQ0B,QAAS,SAACd,GACdR,OAAOC,QAAQC,KAAKC,IAAI,CAAC,cAAe,SAASC,GAC7CC,QAAQC,IAAI,kBACZD,QAAQC,IAAIF,EAAOG,YACnBC,EAAQJ,EAAOG,gBAJvB,kBCjEZgB,EAAAA,EAASC,OACL9B,EAAAC,EAAAC,cAACF,EAAAC,EAAM8B,WAAP,KACI/B,EAAAC,EAAAC,cAAC8B,EAAD,OAEJC,SAASC,eAAe\",\"sourcesContent\":[\"/*global chrome*/\\r\\n\\r\\nimport React, { useState } from 'react'\\r\\nimport styled from 'styled-components'\\r\\n\\r\\n// custom styling using styled-components!\\r\\nconst AppContainer = styled.div`\\r\\n  \\r\\n`\\r\\n\\r\\nvar item = \\\"\\\";\\r\\nvar getTabs = false;\\r\\n\\r\\n/*\\r\\nasync function fetchFromStorage(key) {\\r\\n    return new Promise ((resolve, reject) => {\\r\\n        chrome.storage.sync.get([key], resolve);\\r\\n    })\\r\\n        .then(result => {\\r\\n            if (key == null) {\\r\\n                return result;\\r\\n            }\\r\\n            else {\\r\\n                return result[key];\\r\\n            }\\r\\n        });\\r\\n}\\r\\n*/\\r\\n\\r\\n\\r\\n\\r\\nchrome.storage.sync.get(['mode'], function(newMode) {\\r\\n    console.log(\\\"DA mode is currently \\\" + newMode.mode);\\r\\n});\\r\\n\\r\\n\\r\\nfunction CurrentTab(props) {\\r\\n    return (\\r\\n        <div>\\r\\n            <p>{props.name}</p>\\r\\n        </div>\\r\\n    )\\r\\n}\\r\\n\\r\\nfunction UpdateTabs(props) {\\r\\n    const update = props.update;\\r\\n    if (update) {\\r\\n        chrome.storage.sync.get(['currentURL'], function(result) {\\r\\n            console.log('currentURL is ');\\r\\n            console.log(result.currentURL);\\r\\n            addTabs(result.currentURL);\\r\\n            getTabs = false;\\r\\n        })\\r\\n    }\\r\\n}   \\r\\n\\r\\nfunction App() {\\r\\n    const [currentTabs, setNewTabs] = useState([\\\"youtube\\\", \\\"twitter\\\"]);\\r\\n\\r\\n    const addTabs = (tab) => {\\r\\n        const newURLs = [...currentTabs, tab];\\r\\n        setNewTabs(newURLs);\\r\\n    }\\r\\n\\r\\n\\r\\n    return ( \\r\\n        <AppContainer addCallback={UpdateTabs}>\\r\\n            {currentTabs.map((item, i) => <CurrentTab \\r\\n                key = {i}\\r\\n                name = {item}\\r\\n                update = {getTabs}\\r\\n            />)}\\r\\n\\r\\n            <button onClick={(addTabs) => {\\r\\n                chrome.storage.sync.get(['currentURL'], function(result) {\\r\\n                    console.log('currentURL is ');\\r\\n                    console.log(result.currentURL);\\r\\n                    addTabs(result.currentURL);\\r\\n                });\\r\\n            }}>\\r\\n                Refresh Tabs\\r\\n            </button>\\r\\n\\r\\n\\r\\n        </AppContainer>\\r\\n    );\\r\\n}\\r\\n\\r\\nexport default App;\",\"/*global chrome*/\\r\\n\\r\\nimport React from 'react';\\r\\nimport ReactDOM from 'react-dom';\\r\\nimport './style.css';\\r\\nimport App from './app';\\r\\n\\r\\n\\r\\nReactDOM.render(\\r\\n    <React.StrictMode>\\r\\n        <App />\\r\\n    </React.StrictMode>,\\r\\n    document.getElementById(\\\"root\\\")\\r\\n)\\r\\n\\r\\n\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{13:function(e,n,t){e.exports=t(22)},18:function(e,n,t){},22:function(e,n,t){\"use strict\";t.r(n);var r,c=t(0),o=t.n(c),a=t(5),u=t.n(a),l=(t(18),t(11),t(12)),s=t(6),i=t(7).a.div(r||(r=Object(s.a)([\"\\n  \\n\"]))),m=!1;function d(e){return o.a.createElement(\"div\",null,o.a.createElement(\"p\",null,e.name))}function f(e){e.update&&chrome.storage.sync.get([\"currentURL\"],function(e){console.log(\"currentURL is \"),console.log(e.currentURL),addTabs(e.currentURL),m=!1})}chrome.storage.sync.get([\"mode\"],function(e){console.log(\"DA mode is currently \"+e.mode)});var g=function(){var e=Object(c.useState)([\"youtube\",\"twitter\"]),n=Object(l.a)(e,2),t=n[0];return n[1],o.a.createElement(i,{addCallback:f},t.map(function(e,n){return o.a.createElement(d,{key:n,name:e,update:m})}),o.a.createElement(\"button\",{onClick:function(e){chrome.storage.sync.get([\"currentURL\"],function(n){console.log(\"currentURL is \"),console.log(n.currentURL),e(n.currentURL)})}},\"Refresh Tabs\"))};u.a.render(o.a.createElement(o.a.StrictMode,null,o.a.createElement(g,null)),document.getElementById(\"root\"))}},[[13,2,1]]]);","extractedComments":[]}