{"map":"{\"version\":3,\"sources\":[\"C:/Users/manso/OneDrive/Desktop/TabOrg-master/TabOrg/extension/src/app.js\",\"C:/Users/manso/OneDrive/Desktop/TabOrg-master/TabOrg/extension/src/index.js\"],\"names\":[\"AppContainer\",\"styled\",\"div\",\"_templateObject\",\"Object\",\"taggedTemplateLiteral\",\"_templateObject2\",\"chrome\",\"storage\",\"sync\",\"get\",\"newMode\",\"console\",\"log\",\"mode\",\"App\",\"_useState\",\"useState\",\"_useState2\",\"slicedToArray\",\"currentTabs\",\"setNewTabs\",\"addTabs\",\"tab\",\"concat\",\"_useState3\",\"_useState4\",\"currentNames\",\"setNewNames\",\"addNames\",\"theName\",\"useEffect\",\"result\",\"i\",\"currentURL\",\"length\",\"names\",\"react_default\",\"a\",\"createElement\",\"renderedList\",\"tempURL\",\"tempName\",\"push\",\"id\",\"title\",\"url\",\"content\",\"_i\",\"_renderedList\",\"item\",\"key\",\"getAllItems\",\"ReactDOM\",\"render\",\"StrictMode\",\"app\",\"document\",\"getElementById\"],\"mappings\":\"8NAMMA,EAAeC,EAAAA,EAAOC,IAAVC,IAAAA,EAAAC,OAAAC,EAAA,EAAAD,CAAA,CAAA,aAIaH,EAAAA,EAAOC,IAAVI,IAAAA,EAAAF,OAAAC,EAAA,EAAAD,CAAA,CAAA,wFA8B5BG,OAAOC,QAAQC,KAAKC,IAAI,CAAC,QAAS,SAASC,GACvCC,QAAQC,IAAI,wBAA0BF,EAAQG,QAkGnCC,IAAAA,EAlFf,WAAe,IAAAC,EACuBC,OAAAA,EAAAA,SAAAA,CAAS,IADhCC,EAAAd,OAAAe,EAAA,EAAAf,CAAAY,EAAA,GACJI,EADIF,EAAA,GACSG,EADTH,EAAA,GAGLI,EAAU,SAACC,GAEbX,QAAQC,IAAIU,GACZF,EAAW,SAAAD,GAAW,OAAIA,EAAYI,OAAOD,KAE7CX,QAAQC,IAAIO,IARLK,EAWyBR,OAAAA,EAAAA,SAAAA,CAAS,IAXlCS,EAAAtB,OAAAe,EAAA,EAAAf,CAAAqB,EAAA,GAWJE,EAXID,EAAA,GAWUE,EAXVF,EAAA,GAYLG,EAAW,SAACC,GACdF,EAAY,SAAAD,GAAY,OAAIA,EAAaH,OAAOM,MA4DpD,OAzDAC,OAAAA,EAAAA,UAAAA,CAAU,WACNxB,OAAOC,QAAQC,KAAKC,IAAI,CAAC,cAAe,SAASsB,GAC7CpB,QAAQC,IAAI,kBACZD,QAAQC,IAAImB,EAAM,YAElB,IAAK,IAAIC,EAAI,EAAGA,EAAID,EAAOE,WAAWC,OAAQF,IAE1CX,EAAQU,EAAM,WAAeC,IAC7BrB,QAAQC,IAAIO,KAKpBb,OAAOC,QAAQC,KAAKC,IAAI,CAAC,SAAU,SAASsB,GACxCpB,QAAQC,IAAI,eACZD,QAAQC,IAAImB,EAAOI,OAEnB,IAAK,IAAIH,EAAI,EAAGA,EAAID,EAAOL,aAAaQ,OAAQF,IAE5CJ,EAASG,EAAM,MAAUC,IACzBrB,QAAQC,IAAIc,MAKrB,IAiCCU,EAAAC,EAAAC,cAACvC,EAAD,KA9BgB,SAASoB,EAAaO,GAEtC,IAAIa,EAAe,GAEnB5B,QAAQC,IAAIO,EAAY,IAExB,IAAK,IAAIa,EAAI,EAAGA,EAAI,GAAIA,IACxB,CACI,IAAIQ,EAAUrB,EAAYa,GACtBS,EAAWf,EAAaM,GAE5BO,EAAaG,KAAK,CACdC,GAAIX,EACJY,MAAOH,EACPI,IAAKL,IAIb7B,QAAQC,IAAI2B,GAGZ,IADA,IAAIO,EAAU,GACdC,EAAA,EAAAC,EAAiBT,EAAjBQ,EAAAC,EAAAd,OAAAa,IAA+B,CAA1B,IAAIE,EAAID,EAAAD,GACTD,EAAQJ,KAAKN,EAAAC,EAAAC,cAAA,KAAA,CAAIY,IAAKD,EAAKN,IAAKM,EAAKL,MAAxB,KAAiCK,EAAKJ,MAIvD,OAAOC,EAMFK,CAAYhC,KC7HzBiC,EAAAA,EAASC,OACLjB,EAAAC,EAAAC,cAACF,EAAAC,EAAMiB,WAAP,KACIlB,EAAAC,EAAAC,cAACiB,EAAD,OAEJC,SAASC,eAAe\",\"sourcesContent\":[\"/*global chrome*/\\r\\n\\r\\nimport React, { useEffect, useState } from 'react'\\r\\nimport styled from 'styled-components'\\r\\n\\r\\n// custom styling using styled-components!\\r\\nconst AppContainer = styled.div`\\r\\n  \\r\\n`\\r\\n\\r\\nconst ListComponentContainer = styled.div`\\r\\n    border-style: solid;\\r\\n    border-width: thin;\\r\\n    border-radius: 5%;\\r\\n\\r\\n\\r\\n`\\r\\n\\r\\n\\r\\nvar item = \\\"\\\";\\r\\nvar getTabs = false;\\r\\n\\r\\n/*\\r\\nasync function fetchFromStorage(key) {\\r\\n    return new Promise ((resolve, reject) => {\\r\\n        chrome.storage.sync.get([key], resolve);\\r\\n    })\\r\\n        .then(result => {\\r\\n            if (key == null) {\\r\\n                return result;\\r\\n            }\\r\\n            else {\\r\\n                return result[key];\\r\\n            }\\r\\n        });\\r\\n}\\r\\n*/\\r\\n\\r\\n\\r\\n\\r\\nchrome.storage.sync.get(['mode'], function(newMode) {\\r\\n    console.log(\\\"DA mode is currently \\\" + newMode.mode);\\r\\n});\\r\\n\\r\\n\\r\\nfunction ListComponent(props) {\\r\\n    return (\\r\\n        <ListComponentContainer>\\r\\n            <li>\\r\\n                {props.name}, {props.url}\\r\\n            </li>\\r\\n        </ListComponentContainer>\\r\\n    )\\r\\n}\\r\\n\\r\\n\\r\\n\\r\\nfunction App() {\\r\\n    const [currentTabs, setNewTabs] = useState([]);\\r\\n    \\r\\n    const addTabs = (tab) => {\\r\\n\\r\\n        console.log(tab);\\r\\n        setNewTabs(currentTabs => currentTabs.concat(tab));\\r\\n        \\r\\n        console.log(currentTabs);\\r\\n    }\\r\\n\\r\\n    const [currentNames, setNewNames] = useState([]);\\r\\n    const addNames = (theName) => {\\r\\n        setNewNames(currentNames => currentNames.concat(theName));\\r\\n    }\\r\\n    \\r\\n    useEffect(() => {\\r\\n        chrome.storage.sync.get(['currentURL'], function(result) {\\r\\n            console.log('currentURL is ');\\r\\n            console.log(result['currentURL']);\\r\\n\\r\\n            for (let i = 0; i < result.currentURL.length; i++)\\r\\n            {\\r\\n                addTabs(result['currentURL'][i]);\\r\\n                console.log(currentTabs);\\r\\n            }\\r\\n            \\r\\n        });\\r\\n\\r\\n        chrome.storage.sync.get(['names'], function(result) {\\r\\n            console.log(\\\"'names' is \\\");\\r\\n            console.log(result.names);\\r\\n\\r\\n            for (let i = 0; i < result.currentNames.length; i++)\\r\\n            {\\r\\n                addNames(result['names'][i]);\\r\\n                console.log(currentNames);\\r\\n            }\\r\\n\\r\\n        });\\r\\n\\r\\n    } ,[]);\\r\\n\\r\\n    \\r\\n    const getAllItems = function(currentTabs, currentNames) {\\r\\n\\r\\n        let renderedList = [];\\r\\n\\r\\n        console.log(currentTabs[2]);\\r\\n\\r\\n        for (let i = 0; i < 15; i++)\\r\\n        {\\r\\n            let tempURL = currentTabs[i];\\r\\n            let tempName = currentNames[i];\\r\\n\\r\\n            renderedList.push({\\r\\n                id: i,\\r\\n                title: tempName,\\r\\n                url: tempURL\\r\\n            });    \\r\\n        }\\r\\n        \\r\\n        console.log(renderedList);\\r\\n        \\r\\n        let content = [];\\r\\n        for (let item of renderedList) {\\r\\n            content.push(<li key={item.id}>{item.title}, {item.url}</li>);\\r\\n            \\r\\n        }\\r\\n        \\r\\n        return content;\\r\\n    }\\r\\n\\r\\n    return ( \\r\\n        <AppContainer>\\r\\n        \\r\\n            {getAllItems(currentTabs)}\\r\\n\\r\\n        </AppContainer>\\r\\n    );\\r\\n}\\r\\n\\r\\nexport default App;\",\"/*global chrome*/\\r\\n\\r\\nimport React from 'react';\\r\\nimport ReactDOM from 'react-dom';\\r\\nimport './style.css';\\r\\nimport App from './app';\\r\\n\\r\\n\\r\\nReactDOM.render(\\r\\n    <React.StrictMode>\\r\\n        <App />\\r\\n    </React.StrictMode>,\\r\\n    document.getElementById(\\\"root\\\")\\r\\n)\\r\\n\\r\\n\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{12:function(e,n,o){e.exports=o(21)},17:function(e,n,o){},21:function(e,n,o){\"use strict\";o.r(n);var t,r,c=o(0),l=o.n(c),a=o(8),s=o.n(a),u=(o(17),o(5)),i=o(2),g=o(3),d=g.a.div(t||(t=Object(i.a)([\"\\n  \\n\"])));g.a.div(r||(r=Object(i.a)([\"\\n    border-style: solid;\\n    border-width: thin;\\n    border-radius: 5%;\\n\\n\\n\"])));chrome.storage.sync.get([\"mode\"],function(e){console.log(\"DA mode is currently \"+e.mode)});var f=function(){var e=Object(c.useState)([]),n=Object(u.a)(e,2),o=n[0],t=n[1],r=function(e){console.log(e),t(function(n){return n.concat(e)}),console.log(o)},a=Object(c.useState)([]),s=Object(u.a)(a,2),i=s[0],g=s[1],f=function(e){g(function(n){return n.concat(e)})};return Object(c.useEffect)(function(){chrome.storage.sync.get([\"currentURL\"],function(e){console.log(\"currentURL is \"),console.log(e.currentURL);for(var n=0;n<e.currentURL.length;n++)r(e.currentURL[n]),console.log(o)}),chrome.storage.sync.get([\"names\"],function(e){console.log(\"'names' is \"),console.log(e.names);for(var n=0;n<e.currentNames.length;n++)f(e.names[n]),console.log(i)})},[]),l.a.createElement(d,null,function(e,n){var o=[];console.log(e[2]);for(var t=0;t<15;t++){var r=e[t],c=n[t];o.push({id:t,title:c,url:r})}console.log(o);for(var a=[],s=0,u=o;s<u.length;s++){var i=u[s];a.push(l.a.createElement(\"li\",{key:i.id},i.title,\", \",i.url))}return a}(o))};s.a.render(l.a.createElement(l.a.StrictMode,null,l.a.createElement(f,null)),document.getElementById(\"root\"))}},[[12,2,1]]]);","extractedComments":[]}